from flask import Flask
from flask_restful import Api,Resource

app = Flask(__name__)
api = Api(app)


class schema(Resource):
    def get(self):
        return {
  "SFAccount": ["id","name","SMUsername","isDeleted","ownerID","ofClientsYears",
    "activeProgramCohort",
    "programCohortHistory",
    "alternateAccountName",
    "annualBudgetMostRecent",
    "billingAddressCity",
    "billingAddressCountry",
    "billingAddressGeocodeAccuracy",
    "billingAddressLatitude",
    "billingAddressLongitude",
    "billingAddressPostalCode",
    "billingAddressState",
    "billingAddressStreet",
    "bipocHeadOfOrg",
    "bipocPctOfBoard",
    "bipocPctOfSrLeaders",
    "bipocPctOfStaff",
    "caseStudyStatus",
    "caseType",
    "countOfProgrammEngagements",
    "fullTimeStaffRangeCount",
    "fullTimeStaffRange",
    "highestStageValue",
    "directoryTags",
    "SMAccountID",
    "mostRecentPEState",
    "mrp",
    "parentID",
    "serviceDelivery",
    "type",
    "createdDate",
    "createdBy",
    "lastModifiedDate",
    "lastModifiedBy",
    "systemModstamp",
    "daysSinceLastActivity"
  ],
  "SFFeedbackLoop": [
    "id",
    "accountId",
    "name",
    "SMSurveyId",
    "serviceLevelOne",
    "serviceLevelTwo",
    "responseCount",
    "clientsSurveyedCount",
    "isDeleted",
    "programCohort",
    "programEngagement",
    "stageNumberValue",
    "loopDuration",
    "stageValue",
    "systemModstamp",
    "createdDate",
    "lastModifiedDate",
    "createdBy",
    "lastModifiedBy"
  ],
  "SFApplication": [
    "id",
    "name",
    "isDeleted",
    "ofClientsYears",
    "accountId",
    "annualActualBudget",
    "budgetRangeCalc",
    "ediApproach",
    "fullTimeStaffCount",
    "fullTimeStaffRange",
    "headOfOrgRaceEthnicity",
    "organizationType",
    "payorType",
    "programCohort",
    "programEngagement",
    "serviceLevelOne",
    "serviceLevelTwo",
    "sponsor",
    "surveyFrequency",
    "createdDate",
    "createdBy",
    "lastModifiedDate",
    "lastModifiedBy",
    "systemModstamp"
  ],
  "SFOpportunity": [
    "id",
    "name",
    "isDeleted",
    "accountId",
    "allocatedFunds",
    "amount",
    "amountOutstanding",
    "amountPaid",
    "funder",
    "payor",
    "paymentStatus",
    "programCohort",
    "source",
    "sponsor",
    "numberOfSupportedOrgs",
    "unallocatedFunds",
    "systemModstamp",
    "createdDate",
    "lastModifiedDate",
    "createdBy",
    "lastModifiedBy"
  ],
  "SFProgramEngagement": [
    "id",
    "name",
    "isDeleted",
    "accountId",
    "ownerId",
    "introCallDeliveryDate",
    "introCallDeliveryMonth",
    "annualBudget",
    "annualBudgetRange",
    "bipocHeadOfOrg",
    "bipocPctOfBoard",
    "bipocPctOfSrLeaders",
    "bipocPctOfStaff",
    "currentProgramMonth",
    "ediApproach",
    "firstProgramEnagement",
    "funder",
    "fullTimeStaffCount",
    "fullTimeStaffRange",
    "highestLoopStage",
    "hightestLoopStageProgramMonth",
    "latestCall",
    "latestWebinarAttended",
    "mostRecentCall",
    "offAppSurvey",
    "payorType",
    "programId",
    "programCohortId",
    "programEnagementProgress",
    "sponsor",
    "stageId",
    "step0Satisfied",
    "step1Satisfied",
    "step2Satisfied",
    "step3Satisfied",
    "step45Satisfied",
    "supplementalSurveyUserd",
    "surveyFrequency",
    "systemModstamp",
    "createdDate",
    "lastModifiedDate",
    "createdBy",
    "lastModifiedBy"
  ],
  "SFServiceDelivery": [
    "id",
    "name",
    "isDeleted",
    "attendanceStatus",
    "deliveryDate",
    "deliverySubType",
    "deliveryType",
    "accountId",
    "introCall",
    "loopNumber",
    "loopTransitionCall",
    "programEngagementId",
    "programMonth",
    "staffTransitionCall",
    "step1Call",
    "step2Call",
    "step3Call",
    "step4Call",
    "step5Call",
    "createdDate",
    "createdBy",
    "lastModifiedDate",
    "lastModifiedBy",
    "systemModstamp"
  ],
  "SFProgramCohort": [
    "id",
    "name",
    "isDeleted",
    "description",
    "endDate",
    "programId",
    "startDate",
    "status",
    "currentProgramMonth",
    "createdDate",
    "createdBy",
    "lastModifiedDate",
    "lastModifiedBy",
    "systemModstamp"
  ],
  "SFOpportunityAccountAllocation": [
    "id",
    "name",
    "isDeleted",
    "allocatedAmount",
    "opportunity",
    "programEngagement",
    "programEngagementStage",
    "l4gGranteeYearAndRound",
    "paymentStatus",
    "sponsoringOrganization",
    "programCohort",
    "systemModstamp",
    "createdDate",
    "lastModifiedDate",
    "createdBy",
    "lastModifiedBy"
  ],
  "SMMember": [
    "id",
    "username",
    "ignoreMember",
    "accessToken",
    "createdDate"
  ],
  "SMMemberSurvey": [
    "id",
    "memberId",
    "username",
    "title",
    "nickname",
    "language",
    "category",
    "questionCount",
    "responseCount",
    "createdDate",
    "modifiedDate",
    "questionBank"
  ],
  "SMSurveyResponse": [
    "id",
    "memberId",
    "username",
    "surveyId",
    "respondentId",
    "collectorId",
    "isCompleted",
    "ipAddress",
    "serviceLevelOne",
    "serviceLevelTwo",
    "age",
    "gender",
    "race",
    "qNPS",
    "qMeetNeeds",
    "qRespect",
    "qEasyServices",
    "qConnected",
    "qGoodAt",
    "qDoBetter",
    "totalTime",
    "startDate",
    "endDate"
  ],
  "SMSurveyBenchmark": [
    "memberId",
    "username",
    "surveyId",
    "serviceLevelOne",
    "serviceLevelTwo",
    "totalResponses",
    "npsTotalResponses",
    "npsTotal",
    "npsDetractors",
    "npsPassives",
    "npsPromoters",
    "npsScore",
    "npsDetractorsPer",
    "npsPassivesPer",
    "npsPromotersPer",
    "npsMean",
    "npsIncluded",
    "q4TotalResponses",
    "q4NotWellAtAll",
    "q4ALittleBit",
    "q4FairlyWell",
    "q4VeryWell",
    "q4ExtremelyWell",
    "q4NotWellAtAllPer",
    "q4ALittleBitPer",
    "q4FairlyWellPer",
    "q4VeryWellPer",
    "q4ExtremelyWellPer",
    "q4WeightedAvg",
    "q4Mean",
    "q4Included",
    "q5TotalResponses",
    "q5Never",
    "q5Rarely",
    "q5Sometimes",
    "q5Usually",
    "q5Mostly",
    "q5Always",
    "q5NeverPer",
    "q5RarelyPer",
    "q5SometimesPer",
    "q5UsuallyPer",
    "q5MostlyPer",
    "q5AlwaysPer",
    "q5Mean",
    "q5WeightedAvg",
    "q5Included",
    "q6TotalResponses",
    "q6NotAtAllEasy",
    "q6ALittleBitEasy",
    "q6FairlyEasy",
    "q6VeryEasy",
    "q6ExtremelyEasy",
    "q6NotAtAllEasyPer",
    "q6ALittleBitEasyPer",
    "q6FairlyEasyPer",
    "q6VeryEasyPer",
    "q6ExtremelyEasyPer",
    "q6WeightedAvg",
    "q6Mean",
    "q6Included",
    "q8TotalResponses",
    "q8NotAtAllConnected",
    "q8ALittleBitConnected",
    "q8FairlyConnected",
    "q8VeryConnected",
    "q8ExtremelyConnected",
    "q8NotAtAllConnectedPer",
    "q8ALittleBitConnectedPer",
    "q8FairlyConnectedPer",
    "q8VeryConnectedPer",
    "q8ExtremelyConnectedPer",
    "q8WeightedAvg",
    "q8Mean",
    "q8Included"
  ],
  "SMMemberBenchmark": [
    "memberId",
    "totalResponses",
    "npsTotalResponses",
    "npsTotal",
    "npsDetractors",
    "npsPassives",
    "npsPromoters",
    "npsScore",
    "npsDetractorsPer",
    "npsPassivesPer",
    "npsPromotersPer",
    "npsMean",
    "npsIncluded",
    "q4TotalResponses",
    "q4NotWellAtAll",
    "q4ALittleBit",
    "q4FairlyWell",
    "q4VeryWell",
    "q4ExtremelyWell",
    "q4NotWellAtAllPer",
    "q4ALittleBitPer",
    "q4FairlyWellPer",
    "q4VeryWellPer",
    "q4ExtremelyWellPer",
    "q4WeightedAvg",
    "q4Mean",
    "q4Included",
    "q5TotalResponses",
    "q5Never",
    "q5Rarely",
    "q5Sometimes",
    "q5Usually",
    "q5Mostly",
    "q5Always",
    "q5NeverPer",
    "q5RarelyPer",
    "q5SometimesPer",
    "q5UsuallyPer",
    "q5MostlyPer",
    "q5AlwaysPer",
    "q5Mean",
    "q5WeightedAvg",
    "q5Included",
    "q6TotalResponses",
    "q6NotAtAllEasy",
    "q6ALittleBitEasy",
    "q6FairlyEasy",
    "q6VeryEasy",
    "q6ExtremelyEasy",
    "q6NotAtAllEasyPer",
    "q6ALittleBitEasyPer",
    "q6FairlyEasyPer",
    "q6VeryEasyPer",
    "q6ExtremelyEasyPer",
    "q6WeightedAvg",
    "q6Mean",
    "q6Included",
    "q8TotalResponses",
    "q8NotAtAllConnected",
    "q8ALittleBitConnected",
    "q8FairlyConnected",
    "q8VeryConnected",
    "q8ExtremelyConnected",
    "q8NotAtAllConnectedPer",
    "q8ALittleBitConnectedPer",
    "q8FairlyConnectedPer",
    "q8VeryConnectedPer",
    "q8ExtremelyConnectedPer",
    "q8WeightedAvg",
    "q8Mean",
    "q8Included"
  ],
  "L4GDataCheckpoint": [
    "tableName",
    "lastSyncTimestamp"
  ]
}

api.add_resource(schema,"/schema")

if __name__ == "__main__":
    app.run(debug=True,port=2000)